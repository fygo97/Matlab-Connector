plugins {
  id 'application'
  id 'com.github.johnrengelman.shadow' version '8.1.1' //necessary plugin to create the .jar file for matlab later
}

application { mainClass = 'QuickTest' } // currently running QuickTest.java as application

repositories { mavenCentral() }

dependencies {
    // SLF4J implementation to silence warnings
    implementation 'org.slf4j:slf4j-simple:2.0.16'

    // Polypheny JDBC driver
    implementation files(rootProject.file('libs/polypheny-jdbc-driver-2.3.jar'))
    testImplementation files(rootProject.file('libs/polypheny-jdbc-driver-2.3.jar'))

    // Multimodel extension JAR (if you really need it)
    runtimeOnly     files(rootProject.file('libs/polypheny-jdbc-multimodel-2.3.jar'))
    testRuntimeOnly files(rootProject.file('libs/polypheny-jdbc-multimodel-2.3.jar'))

    // JUnit 5 API + engine
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly   'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

shadowJar {
  archiveBaseName.set('polypheny')     // final jar name base
  archiveClassifier.set('all')         // adds -all suffix
  archiveVersion.set('')               // => app/build/libs/polypheny-all.jar
}

java {
  toolchain { languageVersion = JavaLanguageVersion.of(8) }
}

test {
    useJUnitPlatform()
    testLogging {
      events "passed", "skipped", "failed"
    }
    outputs.upToDateWhen { false }
}

